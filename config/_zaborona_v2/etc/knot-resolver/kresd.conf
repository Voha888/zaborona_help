-- SPDX-License-Identifier: CC0-1.0
-- vim:syntax=lua:set ts=4 sw=4:
-- Refer to manual: https://knot-resolver.readthedocs.org/en/stable/

-- Network interface configuration
net.listen('127.0.0.1', 5353, { kind = 'dns'})
net.listen('127.0.0.1', 5853, { kind = 'tls' })
--net.listen('127.0.0.1', 4443, { kind = 'doh2' })
net.listen('::1', 5053, { kind = 'dns', freebind = true })
net.listen('::1', 5853, { kind = 'tls', freebind = true })
--net.listen('::1', 4443, { kind = 'doh2' })

net.listen('192.168.224.1', 5353, { kind = 'dns'})
-- net.listen('192.168.228.1', 5353, { kind = 'dns'})
net.listen('192.168.232.1', 5353, { kind = 'dns'})
-- net.listen('192.168.236.1', 5353, { kind = 'dns'})
net.listen('192.168.240.1', 5353, { kind = 'dns'})
-- net.listen('192.168.244.1', 5353, { kind = 'dns'})
net.listen('192.168.248.1', 5353, { kind = 'dns'})
-- net.listen('192.168.252.1', 5353, { kind = 'dns'})
net.listen('192.168.220.1', 5353, { kind = 'dns'})
net.listen('192.168.216.1', 5353, { kind = 'dns'})
-- net.listen('192.168.212.1', 5353, { kind = 'dns'})
-- net.listen('192.168.208.1', 5353, { kind = 'dns'})
net.listen('192.168.204.1', 5353, { kind = 'dns'})
-- net.listen('192.168.111.129', 5353, { kind = 'dns'})
net.listen('192.168.111.1', 5353, { kind = 'dns'})
-- net.listen('10.14.20.1', 5353, { kind = 'dns'})
-- net.listen('192.168.17.1', 5353, { kind = 'dns'})

-- Load useful modules
modules = {
	'hints > iterate',  -- Load /etc/hosts and allow custom root hints
	'stats',            -- Track internal statistics
	'predict',          -- Prefetch expiring/frequent records
}

-- Cache size
cache.size = 100 * MB

-- Switch to unprivileged user --
user('knot-resolver','knot-resolver')
-- Unprivileged

-- For tmpfs
cache.open(300 * MB, 'lmdb:///tmp/knot-resolver')

-- See https://gitlab.labs.nic.cz/knot/knot-resolver/issues/470
net.ipv6 = false

-- minimum TTL = 2 minutes
cache.min_ttl(120)

dofile("/etc/knot-resolver/knot-aliases-alt.conf")

policy.add(
    policy.suffix(
        policy.STUB(
            {'127.0.0.4#5959'}
        ),
        policy.todnames(blocked_hosts)
    )
)

-- Resolve OpenNIC, EMCDNS and Namecoin domains
policy.add(
    policy.suffix(
        policy.STUB(
            {'172.104.136.243', '176.126.70.119', '87.98.175.85', '193.183.98.66'}
        ),
        policy.todnames({'bbs.', 'chan.', 'cyb.', 'dyn.', 'geek.', 'gopher.',
                         'indy.', 'libre.', 'neo.', 'null.', 'o.', 'oss.', 'oz.',
                         'parody.', 'pirate.', 'free.', 'bazar.', 'coin.',
                         'emc.', 'lib.', 'fur.', 'bit.', 'ku.', 'te.', 'ti.', 'uu.'
                         }
        )
    )
)
